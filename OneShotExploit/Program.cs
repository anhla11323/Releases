using System;
using System.Media;
using System.Timers;
using LeagueSharp;
using LeagueSharp.Common;
using SharpDX;
using SharpDX.Direct3D9;
using Color = System.Drawing.Color;
namespace OneShotExploit {
	internal class Exploit { /*gotta luv BlackFeeder for these vectors*/
		private static readonly Vector3 PurpleSpawn = new Vector3(14286f, 14382f, 172f);
		private static readonly Vector3 BlueSpawn = new Vector3(416f, 468f, 182f);
		private static readonly SoundPlayer TeemoLaugh = new SoundPlayer(Properties.Resources.TeemoLaugh);
		public static Render.Sprite PicByGiani;
		public static Render.Sprite KappaHd;
		public static Render.Sprite KappaHd2;
		private static readonly Timer SpaghettiTimer = new Timer();
		private static double _seconds;
		public static void Initialize() {
			PicByGiani = new Render.Sprite(Properties.Resources.PicByGiani, new Vector2(1, 1));
			KappaHd = new Render.Sprite(Properties.Resources.Kappahd, new Vector2(1, 1));
			KappaHd2 = new Render.Sprite(Properties.Resources.Kappahd2, new Vector2(1, 1));
			PicByGiani.Add();
			KappaHd.Add();
			KappaHd2.Add();
			SpaghettiTimer.Interval = 1000;
			SpaghettiTimer.Start();
			SpaghettiTimer.Elapsed += DisplayTimeEvent;
			Notifications.AddNotification("Exploit loaded!", 4000);
			Utility.DelayAction.Add(14000, DoShit);
			Drawing.OnDraw += FkinDumbDrawingsHowDoITurnThisShitOffPls;
			Game.OnUpdate += UnstoppableFeed;
		}
		private static void DoShit() {
			TeemoLaugh.PlayLooping();
			ObjectManager.Player.BuyItem(ItemId.Faerie_Charm);
			ObjectManager.Player.BuyItem(ItemId.Rejuvenation_Bead);
			ObjectManager.Player.BuyItem(ItemId.Mana_Potion);
			ObjectManager.Player.BuyItem(ItemId.Health_Potion);
			ObjectManager.Player.BuyItem(ItemId.Mana_Potion);
		}
		public static void DisplayTimeEvent(object source, ElapsedEventArgs e) {
			++_seconds;
		}
		private static void UnstoppableFeed(EventArgs args) {
			if (_seconds > 14) {
				if (ObjectManager.Player.Team == GameObjectTeam.Order) {
					ObjectManager.Player.IssueOrder(GameObjectOrder.MoveTo, PurpleSpawn);
				}
				if (ObjectManager.Player.Team == GameObjectTeam.Chaos) {
					ObjectManager.Player.IssueOrder(GameObjectOrder.MoveTo, BlueSpawn);
				}
			}
			if (_seconds > 32) {
				Bugsplat();
			}
		}
		private static void FkinDumbDrawingsHowDoITurnThisShitOffPls(EventArgs args) {
			if (_seconds > 30) {
				PicByGiani.Visible = false;
				KappaHd.Visible = false;
				KappaHd2.Visible = true;
				Drawing.DrawLine(new Vector2(1275, 860), new Vector2(1610, 860), 200, Color.Black);
				return;
			}
			if (_seconds > 23) {
				PicByGiani.Visible = false;
				KappaHd.Visible = true;
				KappaHd2.Visible = false;
				Drawing.DrawLine(new Vector2(1275, 860), new Vector2(1610, 860), 200, Color.Black);
				return;
			}
			if (_seconds > 14) {
				PicByGiani.Visible = true;
				KappaHd.Visible = false;
				KappaHd2.Visible = false;
				Drawing.DrawLine(new Vector2(1275, 860), new Vector2(1610, 860), 200, Color.Black);
				return;
			}
			PicByGiani.Visible = false;
			KappaHd.Visible = false;
			KappaHd2.Visible = false;
		}
		private static void Bugsplat() {
			Notifications.AddNotification("k", 1);
			Game.PrintChat("k");
			Game.Say("k");
			Bugsplat();
			Utility.DelayAction.Add(111, Bugsplat);
			Utility.DelayAction.Add(222, Bugsplat);
			Utility.DelayAction.Add(333, Bugsplat);
			Bugsplat2();
			Utility.DelayAction.Add(150, Bugsplat2);
			Utility.DelayAction.Add(250, Bugsplat2);
			Utility.DelayAction.Add(400, Bugsplat2);
		}
		private static void Bugsplat2() {
			Notifications.AddNotification("kk", 1);
			Game.PrintChat("kk");
			Game.Say("kk");
			Bugsplat();
			Utility.DelayAction.Add(111, Bugsplat);
			Utility.DelayAction.Add(222, Bugsplat);
			Utility.DelayAction.Add(333, Bugsplat);
			Bugsplat2();
			Utility.DelayAction.Add(150, Bugsplat2);
			Utility.DelayAction.Add(250, Bugsplat2);
			Utility.DelayAction.Add(400, Bugsplat2);
		}
	}
}
